; referenced from https://jameshfisher.com/2017/02/20/macos-assembly-hello-world/
; as well as from https://rderik.com/blog/let-s-write-some-assembly-code-in-macos-for-intel-x86-64/
; written in Intel assembly syntax
; uses macOS system calls

; we have to add 0x20000000 to the syscall number
; and the syscall numbers we can find here...
;   https://opensource.apple.com/source/xnu/xnu-1504.3.12/bsd/kern/syscalls.master
; but the problem is, we literally do not know why we have to add 0x20000000
; another problem is that we don't even know how it is one might navigate to the document...

; we figured out why we have to add 0x2.... it's because of what the following Stack Overflow post
; says. https://stackoverflow.com/questions/48845697/macos-64-bit-system-call-table#:~:text=If%20you%20use%20assembly%20you,which%20would%20mean%20machine%20dependent).
; there exists different classes of kernel system calls. 
; So the 64 bit rax value defining the system call is built with low-order 32-bits being the system
; call number, and the high-order 32-bits are the class type.
; with a class of 2 we are calling the UNIX/BSD class kernel calls.

; How do we build this file?
; nasm -f macho64 helloworld.x86
; ld helloworld.o -L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib -lSystem

; For some explicit details on how one might know that they have to use syscall,
; they need go no further than read the System V ABI (section A.2.1).
; This also details the kernal calling convention of passing arguments in the 
; rdi, rsi, rdx, r10, r8 and r9 registers.

; Right, so what the heck is going on with -lSystem? 

; https://developer.apple.com/forums/thread/667340 apparently according to this thread,
; syscall is deprecated???? YO. What the FUCK is going on man. Why is this so silly...

global _main
section .text
_main:
  mov rax, 0x2000004 ; write
  mov rdi, 1 ; stdout
  mov rsi, msg
  mov rdx, msg.len
  syscall
  mov rax, 0x2000001 ; exit
  mov rdi, 0
  syscall
section .data
msg:    db      "Hello, world!", 10
.len:   equ     $ - msg